from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, KeyboardButtonPollType
from aiogram.utils.keyboard import ReplyKeyboardBuilder

def get_keyboard(
    *btns: str,
    placeholder: str = None,
    request_contact: int = None,
    request_location: int = None,
    sizes: tuple[int] = (2,),
):
    """
    Parameters request_contact and request_location must be as indexes of btns args for buttons you need.
    Example:
    get_keyboard(
            "–ú–µ–Ω—é",
            "–û –º–∞–≥–∞–∑–∏–Ω–µ",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏",
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
            placeholder="–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            request_contact=4,
            sizes=(2, 2, 1)
        )
    """
    keyboard = ReplyKeyboardBuilder()
    for index, text in enumerate(btns, start=0):
        if request_contact and request_contact == index:
            keyboard.add(KeyboardButton(text=text, request_contact=True))
        elif request_location and request_location == index:
            keyboard.add(KeyboardButton(text=text, request_location=True))
        else:
            keyboard.add(KeyboardButton(text=text))
    return keyboard.adjust(*sizes).as_markup(
        resize_keyboard=True, input_field_placeholder=placeholder)



# start_kb = ReplyKeyboardMarkup(
#     keyboard=[
#         [
#             KeyboardButton(text='–ú–µ–Ω—é'),
#             KeyboardButton(text='–û –º–∞–≥–∞–∑–∏–Ω–µ'),
#
#         ],
#         [
#             KeyboardButton(text='–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏'),
#             KeyboardButton(text='–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã'),
#         ],
#
#     ],
#     resize_keyboard=True,
#     input_field_placeholder='–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?'
# )
#
# del_kbd = ReplyKeyboardRemove()
#
# start_kb2 = ReplyKeyboardBuilder()
# start_kb2.add(
#     KeyboardButton(text='–ú–µ–Ω—é'),
#     KeyboardButton(text='–û –º–∞–≥–∞–∑–∏–Ω–µ'),
#     KeyboardButton(text='–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏'),
#     KeyboardButton(text='–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã'),
#     KeyboardButton(text='–í–∞–ª—é—Ç–∞ –≤ —Ä—É–±–ª—è—Ö'),
#     KeyboardButton(text='–ë–∏–ª–∏—Å—å —Å—Ä–∞–∂–∞–ª–∏—Å—å'),
#     KeyboardButton(text='–û—Ç–Ω—é–¥—å –Ω–µ –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'),
#     KeyboardButton(text='–°—Ä–µ–¥–Ω–∏–π –∫–ª–∞—Å—Å'),
#     KeyboardButton(text='–ï–∂–∏–∫–∏ –∏ –®–∞—Ä—Ñ–∏–∫–∏'),
#     KeyboardButton(text='–°–º—É—Ä—Ñ–∏–∫–∏ –∏ –ì–æ–ª—É–±–∏–∫–∞'),
#     KeyboardButton(text='–ü–æ–¥–Ω–∏–º–∞–ª–∏—Å—å —Ç—ã—Å—è—á—É —Ä–∞–∑'),
#     KeyboardButton(text='–°—Ä–µ–¥–Ω–∏–π —á–µ–∫'),
#     KeyboardButton(text='–î—É—Ö –±–æ—Ä—å–±—ã –Ω–µ —É–≥–∞—Å'),
#     KeyboardButton(text='woodworking'),
#     KeyboardButton(text='–°—Ç—Ä–æ–≥–∏–π –µ—Ä—à'),
#     KeyboardButton(text='–¢–æ —á—Ç–æ –±—É–¥–µ—Ç'),
#     KeyboardButton(text='–°–µ–π—á–∞—Å –∏ –∑–¥–µ—Å—å'),
#     KeyboardButton(text='–ù–µ –∑–∞–±—É–¥–µ—Ç –º–æ—è –∑–µ–º–ª—è'),
#     KeyboardButton(text='–ü–∞–ª–∞ –º–æ—è –∏–º–ø–µ—Ä–∏—è'),
# )
# start_kb2.adjust(2, 2)
#
# start_kb3 = ReplyKeyboardBuilder()
# start_kb3.attach(start_kb2)
# start_kb3.row(KeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤'), )
# start_kb3.adjust(2, 2)
#
# test_kb = ReplyKeyboardMarkup(
#     keyboard=[
#         [
#             KeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å', request_poll=KeyboardButtonPollType()),
#         ],
#         [
#             KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä ‚òéÔ∏è', request_contact=True),
#             KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é üó∫Ô∏èÔ∏è', request_location=True),
#         ],
#     ],
#     resize_keyboard=True,
# )
